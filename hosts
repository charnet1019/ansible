# 主机清单
[demo]
192.168.60.8



# ######################## RabbitMQ #############################
#rabbitmq-master ansible_host=192.168.60.9
#rabbitmq-slave ansible_host=192.168.60.8

[rabbitmq_master]
rabbitmq-master ansible_host=192.168.60.9

[rabbitmq_slave]
rabbitmq-slave ansible_host=192.168.60.8
rabbitmq-slave02 ansible_host=192.168.60.11



# ######################## redis #############################
# 当redis主从服务和哨兵共用两台服务器时，redis_master, redis_slave和redis_sentinel不能同时开启, 因为安装时需要判断redis_sentinel的值
# 需要先安装redis_master和redis_slave后再安装redis_sentinel
#[redis_master]
#192.168.60.9
#
#[redis_slave]
#192.168.60.10 ansible_ssh_user="root" ansible_ssh_pass="Pa$$word"

[redis_sentinel]
192.168.60.9 redis_sentinel=True
192.168.60.10 redis_sentinel=True ansible_ssh_user="root" ansible_ssh_pass="Pa$$word"



# ######################## zookeeper #############################
# zookeeper单机模式
#zoo1 ansible_host=192.168.60.8
#
#[zookeeper_nodes]
#zoo1 zookeeper_id=1


# zookeeper集群模式
zoo1 ansible_host=192.168.60.8
zoo2 ansible_host=192.168.60.9
zoo3 ansible_host=192.168.60.11

[zookeeper_nodes]
zoo1 zookeeper_id=1
zoo2 zookeeper_id=2
zoo3 zookeeper_id=3

# ######################## kafka #############################
# Kafka单机
#[kafka_nodes]
#192.168.60.8

# Kafka集群
[kafka_nodes]
192.168.60.8 kafka_broker_id=1
192.168.60.9 kafka_broker_id=2
192.168.60.11 kafka_broker_id=3




# ######################## elasticsearch #############################
# 主机组名称必须为:
#     es_nodes       代表所有需要安装es的节点
#     es_master      代表master节点
#     es_data        代表数据节点
#     es_ingest      代表ingest节点
#     es_coordinator 代表协调节点
es1 ansible_host=192.168.60.8
es2 ansible_host=192.168.60.9
es3 ansible_host=192.168.60.11

[es_nodes]
es1
es2
es3

[es_master]
es1
#es2
#es3

[es_data]
#es1
es2
es3

[es_ingest]
es1
es2
es3

[es_coordinator]

[es:children]
es_nodes
es_master
es_data
es_ingest
es_coordinator


# ######################## logstash #############################
[logstash]
192.168.60.8

[logstash:vars]
elasticsearch_host=192.168.60.11
elasticsearch_port=9200


# ######################## kibana #############################
[kibana]
192.168.60.8

[kibana:vars]
elasticsearch_host=192.168.60.11
elasticsearch_port=9200


# ######################## MongoDB #############################
# ####### 单机模式 #######
# 指定mongodb_replica 和 mongodb_replication_replset 则代表为单机副本集模式
# 否则为普通单机模式
[mongodb_master]
192.168.60.8 mongodb_master=True

[mongodb_replica]
192.168.60.8

# ####### 副本集模式 #######
#[mongodb_master]
#192.168.60.8 mongodb_master=True
#
#[mongodb_replica]
#192.168.60.9
#192.168.60.11

[mongo:children]
mongodb_master
mongodb_replica


# ######################## MySQL #############################
# ####### 单机模式 #######
#[mysql]
#192.168.60.8

# ####### 主从模式 #######
[mysql]
master001 ansible_host=192.168.60.8 mysql_server_id=608 mysql_replication_role="master"
slave001 ansible_host=192.168.60.9 mysql_server_id=609 mysql_replication_role="slave"

[mysql:vars]
mysql_replication_master="{{ hostvars['master001'] }}"
#mysql_max_binlog_size="1G"
#mysql_binlog_format="ROW"


# ######################## PostgreSQL #############################
# ####### 单机模式 #######
[postgresql]
192.168.60.8


# ######################## Consul #############################
# ####### 单机模式 #######
[consul_instances]
consul1 consul_node_role=bootstrap

# ####### 集群模式 #######
[consul_instances]
# 集群组建失败
#consul1 consul_node_role=bootstrap
#consul2 consul_node_role=server
#consul3 consul_node_role=server
#consul4 consul_node_role=client

consul1 consul_node_role=server consul_bootstrap_expect=true
consul2 consul_node_role=server consul_bootstrap_expect=true
consul3 consul_node_role=server consul_bootstrap_expect=true
consul4 consul_node_role=client


# ######################## ProxySQL #############################
[proxysql_instance]
proxysql_node001 ansible_host=192.168.60.8
proxysql_node002 ansible_host=192.168.60.9


# ######################## MinIO #############################
# ####### 单机模式 #######
[minio_instance]
192.168.60.12

# ####### 集群模式 #######
[minio_instances]
server1 ansible_host=192.168.60.8
server2 ansible_host=192.168.60.9
server3 ansible_host=192.168.60.11
server4 ansible_host=192.168.60.12











