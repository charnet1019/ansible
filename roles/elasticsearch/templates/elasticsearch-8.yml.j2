# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ elasticsearch_cluster_name }}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ elasticsearch_node_name }}
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: {{ elasticsearch_path_data }}
#
# Path to log files:
#
path.logs: {{ elasticsearch_path_logs }}
path.repo: {{ elasticsearch_path_repo }}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
{% if elasticsearch_bootstrap_memory_lock %}
bootstrap.memory_lock: {{ elasticsearch_bootstrap_memory_lock | lower }}
{% else %}
#bootstrap.memory_lock: true
{% endif %}
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# By default Elasticsearch is only accessible on localhost. Set a different
# address here to expose this node on the network:
#
network.host: {{ elasticsearch_network_host }}
#
# By default Elasticsearch listens for HTTP traffic on the first free port it
# finds starting at 9200. Set a specific HTTP port here:
#
http.port: {{ elasticsearch_http_port }}
transport.tcp.port: {{ elasticsearch_transport_tcp_port }}
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
discovery.seed_hosts: [{% for host in elasticsearch_discovery_seed_hosts %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}]
#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#
cluster.initial_master_nodes: [{% for host in elasticsearch_cluster_initial_master_nodes %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}]
#
# For more information, consult the discovery and cluster formation module documentation.
#
# --------------------------------- Readiness ----------------------------------
#
# Enable an unauthenticated TCP readiness endpoint on localhost
#
#readiness.port: 9399
#
# ---------------------------------- Various -----------------------------------
#
# Allow wildcard deletion of indices:
#
#action.destructive_requires_name: false

#----------------------- BEGIN SECURITY AUTO CONFIGURATION -----------------------
#
# The following settings, TLS certificates, and keys have been automatically      
# generated to configure Elasticsearch security features on 27-06-2022 03:24:36
#
# --------------------------------------------------------------------------------

# Enable security features
#xpack.security.enabled: true
#
#xpack.security.enrollment.enabled: true

# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents
#xpack.security.http.ssl:
#  enabled: true
#  keystore.path: certs/http.p12

# Enable encryption and mutual authentication between cluster nodes
#xpack.security.transport.ssl:
#  enabled: true
#  verification_mode: certificate
#  keystore.path: certs/transport.p12
#  truststore.path: certs/transport.p12


# Allow other nodes to join the cluster from anywhere
# Connections are encrypted and mutually authenticated
#transport.host: 0.0.0.0

#----------------------- END SECURITY AUTO CONFIGURATION -------------------------
#

# ---------------------------------- Roles -----------------------------------
#
{% if inventory_hostname in groups['es_master'] and inventory_hostname not in groups['es_data'] and inventory_hostname not in groups['es_ingest'] %}
node.roles: [ master ]
{% endif %}
{% if inventory_hostname in groups['es_master'] and inventory_hostname not in groups['es_data'] and inventory_hostname in groups['es_ingest'] %}
node.roles: [ master,ingest ]
{% endif %}

{% if inventory_hostname in groups['es_data'] and inventory_hostname not in groups['es_master'] and inventory_hostname not in groups['es_ingest'] %}
node.roles: [ data ]
{% endif %}
{% if inventory_hostname in groups['es_data'] and inventory_hostname not in groups['es_master'] and inventory_hostname in groups['es_ingest'] %}
node.roles: [ data, ingest ]
{% endif %}

{% if inventory_hostname in groups['es_ingest'] and inventory_hostname not in groups['es_master'] and inventory_hostname not in groups['es_data'] %}
node.roles: [ ingeset ]
{% endif %}

{% if inventory_hostname in groups['es_master'] and inventory_hostname in groups['es_data'] and inventory_hostname not in groups['es_ingest'] %}
node.roles: [ master, data ]
{% endif %}

{% if inventory_hostname in groups['es_master'] and inventory_hostname in groups['es_data'] and inventory_hostname in groups['es_ingest'] %}
node.roles: [ master, data, ingest ]
{% endif %}

{% if inventory_hostname in groups['es_coordinator'] %}
node.roles: [ ]
{% endif %}


{% if elasticsearch_index_refresh_interval %}
index.refresh_interval
{% endif %}

{% if elasticsearch_index_merge_scheduler_max_thread_count %}
index.merge.scheduler.max_thread_count: {{ elasticsearch_index_merge_scheduler_max_thread_count }}
{% endif %}

{% if elasticsearch_indices_memory_index_buffer_size %}
indices.memory.index_buffer_size: {{ elasticsearch_indices_memory_index_buffer_size }}
{% endif %}
{% if elasticsearch_indices_memory_min_index_buffer_size %}
indices.memory.min_index_buffer_size: {{ elasticsearch_indices_memory_min_index_buffer_size }}
{% endif %}
{% if elasticsearch_indices_memory_max_index_buffer_size %}
indices.memory.max_index_buffer_size: {{ elasticsearch_indices_memory_max_index_buffer_size }}
{% endif %}


{% if elasticsearch_index_translog_durability %}
index.translog.durability: {{ elasticsearch_index_translog_durability }}
{% endif %}
{% if elasticsearch_index_translog_sync_interval %}
index.translog.sync_interval: {{ elasticsearch_index_translog_sync_interval }}
{% endif %}
{% if elasticsearch_index_translog_flush_threshold_size %}
index.translog.flush_threshold_size: {{ elasticsearch_index_translog_flush_threshold_size }}
{% endif %}


{% if elasticsearch_discovery_zen_fd_ping_interval and elasticsearch_series == 6 %}
discovery.zen.fd.ping_interval: {{ elasticsearch_discovery_zen_fd_ping_interval }}
{% endif %}
{% if elasticsearch_discovery_zen_fd_ping_timeout and elasticsearch_series == 6 %}
discovery.zen.fd.ping_timeout: {{ elasticsearch_discovery_zen_fd_ping_timeout }}
{% endif %}
{% if elasticsearch_discovery_zen_fd_ping_retries and elasticsearch_series == 6 %}
discovery.zen.fd.ping_retries: {{ elasticsearch_discovery_zen_fd_ping_retries }}
{% endif %}

